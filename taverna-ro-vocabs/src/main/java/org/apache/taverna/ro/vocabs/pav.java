/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 */

/*
This Java class was generated for Apache Taverna 
from the original RDF/XML ontology http://purl.org/pav/2.3
which license and attribution is shown below according to
Apache License 2.0 clause 4c:

Copyright 2008-2014 Massachusetts General Hospital; Harvard Medical School; Balboa Systems; University of Manchester

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.


<dcterms:title xml:lang="en">PAV - Provenance, Authoring and Versioning</dcterms:title>

<rdfs:comment xml:lang="en">PAV is a lightweight ontology for tracking Provenance, Authoring and Versioning. PAV specializes the W3C provenance ontology PROV-O in order to describe authorship, curation and digital creation of online resources.

  This ontology describes the defined PAV properties and their usage. Note that PAV does not define any explicit classes or domain/ranges, as every property is meant to be used directly on the described online resource.

  Cite as: Paolo Ciccarese, Stian Soiland-Reyes, Khalid Belhajjame, Alasdair JG Gray, Carole Goble, Tim Clark (2013): PAV ontology: provenance, authoring and versioning. Journal of biomedical semantics 4 (1), 37. doi:10.1186/2041-1480-4-37
</rdfs:comment>


<dc:creator rdf:datatype="&xsd;string">Paolo Ciccarese</dc:creator>
<dc:creator rdf:datatype="&xsd;string">Stian Soiland-Reyes</dc:creator>
<dc:contributor rdf:datatype="&xsd;string">Marco Ocana</dc:contributor>
<dc:contributor rdf:datatype="&xsd;string">Alasdair J G Gray</dc:contributor>
<dc:contributor rdf:datatype="&xsd;string">Khalid Belhajjame</dc:contributor>
<dc:contributor rdf:datatype="&xsd;string">Simon Jupp</dc:contributor>

*/
package org.apache.taverna.ro.vocabs; 
import org.apache.jena.rdf.model.*;
import org.apache.jena.ontology.*;
 
/**
 * Vocabulary definitions from file:/home/stain/src/incubator-taverna-language/taverna-ro-vocabs/src/main/resources/ontologies/pav.rdf 
 * @author Auto-generated by schemagen on 07 Dec 2018 00:45 
 */
public class pav {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static final OntModel M_MODEL = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://purl.org/pav/";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "2.1.1";
    
    /** <p>An agent that originated or gave existence to the work that is expressed by 
     *  the digital resource. The author of the content of a resource may be different 
     *  from the creator of the resource representation (although they are often the 
     *  same). See pav:createdBy for a discussion. The date of authoring can be expressed 
     *  using pav:authoredOn - note however in the case of multiple authors that there 
     *  is no relationship in PAV identifying which agent contributed when or what. 
     *  If capturing such lineage is desired, it should be additionally expressed 
     *  using activity-centric provenance vocabularies, for instance with prov:wasGeneratedBy 
     *  and prov:qualifiedAssocation.</p>
     */
    public static final ObjectProperty authoredBy = M_MODEL.createObjectProperty( "http://purl.org/pav/authoredBy" );
    
    /** <p>The resource was contributed to by the given agent. The agent provided any 
     *  sort of help in conceiving the work that is expressed by the digital artifact. 
     *  Superproperty of pav:authoredBy and pav:curatedBy. Note that as pav:contributedBy 
     *  identifies only agents that contributed to the work, knowledge or intellectual 
     *  property, and not agents that made the digital artifact or representation 
     *  (pav:createdBy), thus this property can be considered more precise than dct:contributor. 
     *  See pav:createdBy for a discussion. The date of contribution can be expressed 
     *  using pav:contributedOn - note however in the case of multiple contributors 
     *  that there is no relationship in PAV identifying which agent contributed when 
     *  or what. If capturing such lineage is desired, it should be additionally expressed 
     *  using activity-centric provenance vocabularies, for instance with prov:wasGeneratedBy 
     *  and prov:qualifiedAssocation.</p>
     */
    public static final ObjectProperty contributedBy = M_MODEL.createObjectProperty( "http://purl.org/pav/contributedBy" );
    
    /** <p>The geo-location of the agents when creating the resource (pav:createdBy). 
     *  For instance a photographer takes a picture of the Eiffel Tower while standing 
     *  in front of it.</p>
     */
    public static final ObjectProperty createdAt = M_MODEL.createObjectProperty( "http://purl.org/pav/createdAt" );
    
    /** <p>An agent primary responsible for making the digital artifact or resource representation. 
     *  This property is distinct from forming the content, which is indicated with 
     *  pav:contributedBy or its subproperties; pav:authoredBy, which identifies who 
     *  authored the knowledge expressed by this resource; and pav:curatedBy, which 
     *  identifies who curated the knowledge into its current form. pav:createdBy 
     *  is more specific than dct:createdBy - which might or might not be interpreted 
     *  to cover this creator. For instance, the author wrote 'this species has bigger 
     *  wings than normal' in his log book. The curator, going through the log book 
     *  and identifying important knowledge, formalizes this as 'locus perculus has 
     *  wingspan &gt; 0.5m'. The creator enters this knowledge as a digital resource 
     *  in the knowledge system, thus creating the digital artifact (say as JSON, 
     *  RDF, XML or HTML). A different example is a news article. pav:authoredBy indicates 
     *  the journalist who wrote the article. pav:contributedBy can indicate the artist 
     *  who added an illustration. pav:curatedBy can indicate the editor who made 
     *  the article conform to the news paper's style. pav:createdBy can indicate 
     *  who put the article on the web site. The software tool used by the creator 
     *  to make the digital resource (say Protege, Wordpress or OpenOffice) can be 
     *  indicated with pav:createdWith. The date the digital resource was created 
     *  can be indicated with pav:createdOn. The location the agent was at when creating 
     *  the digital resource can be made using pav:createdAt.</p>
     */
    public static final ObjectProperty createdBy = M_MODEL.createObjectProperty( "http://purl.org/pav/createdBy" );
    
    /** <p>The software/tool used by the creator (pav:createdBy) when making the digital 
     *  resource, for instance a word processor or an annotation tool. A more independent 
     *  software agent that creates the resource without direct interaction by a human 
     *  creator should instead should instead by indicated using pav:createdBy.</p>
     */
    public static final ObjectProperty createdWith = M_MODEL.createObjectProperty( "http://purl.org/pav/createdWith" );
    
    /** <p>An agent specialist responsible for shaping the expression in an appropriate 
     *  format. Often the primary agent responsible for ensuring the quality of the 
     *  representation. The curator may be different from the creator of the author 
     *  (pav:authoredBy) and the creator of the digital resource (pav:createdBy). 
     *  The date of curating can be expressed using pav:curatedOn - note however in 
     *  the case of multiple curators that there is no relationship in PAV identifying 
     *  which agent contributed when or what. If capturing such lineage is desired, 
     *  it should be additionally expressed using activity-centric provenance vocabularies, 
     *  for instance with prov:wasGeneratedBy and prov:qualifiedAssocation.</p>
     */
    public static final ObjectProperty curatedBy = M_MODEL.createObjectProperty( "http://purl.org/pav/curatedBy" );
    
    /** <p>Provided for backwards compatibility with PAV 1.2 only. Use instead the inverse 
     *  pav:curatedBy.</p>
     */
    public static final ObjectProperty curates = M_MODEL.createObjectProperty( "http://purl.org/pav/curates" );
    
    /** <p>Derived from a different resource. Derivation conserns itself with derived 
     *  knowledge. If this resource has the same content as the other resource, but 
     *  has simply been transcribed to fit a different model (like XML -&gt; RDF or 
     *  SQL -&gt; CVS), use pav:importedFrom. If a resource was simply retrieved, 
     *  use pav:retrievedFrom. If the content has however been further refined or 
     *  modified, pav:derivedFrom should be used. Details about who performed the 
     *  derivation may be indicated with pav:contributedBy and its subproperties.</p>
     */
    public static final ObjectProperty derivedFrom = M_MODEL.createObjectProperty( "http://purl.org/pav/derivedFrom" );
    
    /** <p>An entity responsible for importing the data. The importer is usually a software 
     *  entity which has done the transcription from the original source. Note that 
     *  pav:importedBy may overlap with pav:createdWith. The source for the import 
     *  should be given with pav:importedFrom. The time of the import should be given 
     *  with pav:importedOn. See pav:importedFrom for a discussion of import vs. retrieve 
     *  vs. derived.</p>
     */
    public static final ObjectProperty importedBy = M_MODEL.createObjectProperty( "http://purl.org/pav/importedBy" );
    
    /** <p>The original source of imported information. Import means that the content 
     *  has been preserved, but transcribed somehow, for instance to fit a different 
     *  representation model. Examples of import are when the original was JSON and 
     *  the current resource is RDF, or where the original was an document scan, and 
     *  this resource is the plain text found through OCR. The imported resource does 
     *  not have to be complete, but should be consistent with the knowledge conveyed 
     *  by the original resource. If additional knowledge has been contributed, pav:derivedFrom 
     *  would be more appropriate. If the resource has been copied verbatim from the 
     *  original representation (e.g. downloaded), use pav:retrievedFrom. To indicate 
     *  which agent(s) performed the import, use pav:importedBy. Use pav:importedOn 
     *  to indicate when it happened.</p>
     */
    public static final ObjectProperty importedFrom = M_MODEL.createObjectProperty( "http://purl.org/pav/importedFrom" );
    
    /** <p>The previous version of a resource in a lineage. For instance a news article 
     *  updated to correct factual information would point to the previous version 
     *  of the article with pav:previousVersion. If however the content has significantly 
     *  changed so that the two resources no longer share lineage (say a new news 
     *  article that talks about the same facts), they should be related using pav:derivedFrom. 
     *  A version number of this resource can be provided using the data property 
     *  pav:version.</p>
     */
    public static final ObjectProperty previousVersion = M_MODEL.createObjectProperty( "http://purl.org/pav/previousVersion" );
    
    /** <p>The original provider of the encoded information (e.g. PubMed, UniProt, Science 
     *  Commons). The provider might not coincide with the dct:publisher, which would 
     *  describe the current publisher of the resource. For instance if the resource 
     *  was retrieved, imported or derived from a source, that source was published 
     *  by the original provider. pav:providedBy provides a shortcut to indicate the 
     *  original provider on the new resource.</p>
     */
    public static final ObjectProperty providedBy = M_MODEL.createObjectProperty( "http://purl.org/pav/providedBy" );
    
    /** <p>An entity responsible for retrieving the data from an external source. The 
     *  retrieving agent is usually a software entity, which has done the retrieval 
     *  from the original source without performing any transcription. The source 
     *  that was retrieved should be given with pav:retrievedFrom. The time of the 
     *  retrieval should be indicated using pav:retrievedOn. See pav:importedFrom 
     *  for a discussion of import vs. retrieve vs. derived.</p>
     */
    public static final ObjectProperty retrievedBy = M_MODEL.createObjectProperty( "http://purl.org/pav/retrievedBy" );
    
    /** <p>The URI where a resource has been retrieved from. Retrieval indicates that 
     *  this resource has the same representation as the original resource. If the 
     *  resource has been somewhat transformed, use pav:importedFrom instead. The 
     *  time of the retrieval should be indicated using pav:retrievedOn. The agent 
     *  may be indicated with pav:retrievedBy.</p>
     */
    public static final ObjectProperty retrievedFrom = M_MODEL.createObjectProperty( "http://purl.org/pav/retrievedFrom" );
    
    /** <p>The resource is related to a given source which was accessed or consulted 
     *  (but not retrieved, imported or derived from). This access can be detailed 
     *  with pav:sourceAccessedBy and pav:sourceAccessedOn. For instance, a curator 
     *  (pav:curatedBy) might have consulted figures in a published paper to confirm 
     *  that a dataset was correctly pav:importedFrom the paper's supplementary CSV 
     *  file.</p>
     */
    public static final ObjectProperty sourceAccessedAt = M_MODEL.createObjectProperty( "http://purl.org/pav/sourceAccessedAt" );
    
    /** <p>The resource is related to a source which was accessed or consulted by the 
     *  given agent. The source(s) should be specified using pav:sourceAccessedAt, 
     *  and the time with pav:sourceAccessedOn. For instance, the given agent could 
     *  be a curator (also pav:curatedBy) which consulted figures in a published paper 
     *  to confirm that a dataset was correctly pav:importedFrom the paper's supplementary 
     *  CSV file.</p>
     */
    public static final ObjectProperty sourceAccessedBy = M_MODEL.createObjectProperty( "http://purl.org/pav/sourceAccessedBy" );
    
    /** <p>The date this resource was authored. pav:authoredBy gives the authoring agent. 
     *  Note that pav:authoredOn is different from pav:createdOn, although they are 
     *  often the same. See pav:createdBy for a discussion.</p>
     */
    public static final DatatypeProperty authoredOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/authoredOn" );
    
    /** <p>The date this resource was contributed to. pav:contributedBy provides the 
     *  agent(s) that contributed.</p>
     */
    public static final DatatypeProperty contributedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/contributedOn" );
    
    /** <p>The date of creation of the resource. pav:createdBy provides the agent(s) 
     *  that created the resource.</p>
     */
    public static final DatatypeProperty createdOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/createdOn" );
    
    /** <p>The date this resource was curated. pav:curatedBy gives the agent(s) that 
     *  performed the curation.</p>
     */
    public static final DatatypeProperty curatedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/curatedOn" );
    
    /** <p>The date this resource was imported from a source (pav:importedFrom). Note 
     *  that pav:importedOn may overlap with pav:createdOn, but in cases where they 
     *  differ, the import time indicates the time of the retrieval and transcription 
     *  of the original source, while the creation time indicates when the final resource 
     *  was made, for instance after user approval. If the source is later reimported, 
     *  this should be indicated with pav:lastRefreshedOn. The source of the import 
     *  should be given with pav:importedFrom. The agent that performed the import 
     *  should be given with pav:importedBy. See pav:importedFrom for a discussion 
     *  about import vs. retrieval.</p>
     */
    public static final DatatypeProperty importedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/importedOn" );
    
    /** <p>The date of the last re-import of the resource. This property is used in addition 
     *  to pav:importedOn if this version has been updated due to a re-import. If 
     *  the re-import created a new resource rather than refreshing an existing, then 
     *  pav:importedOn should be used together with pav:previousVersion.</p>
     */
    public static final DatatypeProperty lastRefreshedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/lastRefreshedOn" );
    
    /** <p>The date of the last update of the resource. An update is a change which did 
     *  not warrant making a new resource related using pav:previousVersion, for instance 
     *  correcting a spelling mistake.</p>
     */
    public static final DatatypeProperty lastUpdateOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/lastUpdateOn" );
    
    /** <p>The date the source for this resource was retrieved. The source that was retrieved 
     *  should be indicated with pav:retrievedFrom. The agent that performed the retrieval 
     *  may be specified with pav:retrievedBy.</p>
     */
    public static final DatatypeProperty retrievedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/retrievedOn" );
    
    /** <p>The resource is related to a source which was originally accessed or consulted 
     *  on the given date as part of creating or authoring the resource. The source(s) 
     *  should be specified using pav:sourceAccessedAt. If the source is subsequently 
     *  checked again (say to verify validity), this should be indicated with pav:sourceLastAccessedOn. 
     *  In the case multiple sources being accessed at different times or by different 
     *  agents, PAV does not distinguish who accessed when what. If such details are 
     *  required, they may be provided by additionally using prov:qualifiedInfluence.</p>
     */
    public static final DatatypeProperty sourceAccessedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/sourceAccessedOn" );
    
    /** <p>The resource is related to a source which was last accessed or consulted on 
     *  the given date. The source(s) should be specified using pav:sourceAccessedAt. 
     *  Usage of this property indicates that the source has been checked previously, 
     *  which the initial time should be indicated with pav:sourceAccessedOn. This 
     *  property can be useful together with pav:lastRefreshedOn or pav:lastUpdateOn 
     *  in order to indicate a re-import or update, but could also be used alone, 
     *  for instance when a source was simply verified and no further action was taken 
     *  for the resource,</p>
     */
    public static final DatatypeProperty sourceLastAccessedOn = M_MODEL.createDatatypeProperty( "http://purl.org/pav/sourceLastAccessedOn" );
    
    /** <p>The version number of a resource. This is a freetext string, typical values 
     *  are "1.5" or "21". The URI identifying the previous version can be provided 
     *  using prov:previousVersion.</p>
     */
    public static final DatatypeProperty version = M_MODEL.createDatatypeProperty( "http://purl.org/pav/version" );
    
}
